// Lab-6 – COSC 2425-013– Professor McCurry

//  Implemented by - Brandon Dove


/////////////////////////////////////////////////////////////////////////

PropertyDetails.java class

/////////////////////////////////////////////////////////////////////////


package lab6sp23;

import java.util.Objects;

public class PropertyDetails 

{

	double length;
	double width;
	String Pld;
	
	
	public PropertyDetails (double length, double width, String Pld) 
	
	{
	
		this.length = length;
		this.width = width;
		this.Pld = Pld;
		
		
	}


	public double getLength() 
	
	{
		
		return length;
	
	}


	public void setLength(double length) 
	
	{
		
		this.length = length;
	
	}


	public double getWidth() 
	
	{
		
		return width;
	
	}


	public void setWidth(double width) 
	
	{
		
		this.width = width;
	
	}


	public String getPld() 
	
	{
		
		return Pld;
	
	}


	public void setPld(String pld) 
	
	{
		
		Pld = pld;
	
	}
	
	public double getArea(double length, double width)
	
	{
		
		return this.length * this.width;
	
	}



	
	public boolean equals(PropertyDetails obj) 
	
	{
		
		return obj.getLength() == this.getLength() && obj.getWidth() == this.getWidth() && obj.getPld() == this.getPld() && obj.getArea(obj.length, obj.width) == this.getArea(length, width);
	
	}
	
	public boolean compDimens(PropertyDetails obj)
	
	{
		
		if ((this.getArea(this.length, this.width)) == obj.getArea(length, width))
				
			return true;
		
		else
			return false;
		
	}


	@Override
	public String toString() 
	
	{
		
		return "Property " + this.Pld + " with length " + this.getLength() + ", width " + this.width + ", and area " + this.getArea(length, width) + "."; 
		
	}

}


/////////////////////////////////////////////////////////////////////////

Lab6Driver.java Driver class

/////////////////////////////////////////////////////////////////////////


package lab6sp23Test;

import lab6sp23.PropertyDetails;

public class Lab6Driver

{
	
	public static void main(String[] args) 
	
	{
		// instantiating the objects.
		PropertyDetails DATA1 = new PropertyDetails(78.7, 72.86, "RWA1");
		PropertyDetails DATA2 = new PropertyDetails(59.8, 53.93, "RYT0");
		
		System.out.println(DATA1 + "\n");
		
		System.out.println(DATA2);
		
		System.out.println("\nThe two properties are being compared." + "\n");
		
		// compares if the data equals the other's data.
		System.out.println("DATA1 equals DATA2: " + (DATA1.equals(DATA2)));
				
		// compares dimensions of both objects and outputs if they're equivalent or not.
		if (DATA1.compDimens(DATA2))
			
		{
			
			System.out.println("The two properties have the same dimensions.");
			
		}
		
		else
			
			System.out.println("\nThe two properties do not have the same dimensions.");
	
	}

}


/////////////////////////////////////////////////////////////////////////

OUTPUT:

/////////////////////////////////////////////////////////////////////////


// Run 1:

Property RWA1 with length 78.7, width 72.86, and area 5734.082.

Property RWA1 with length 78.7, width 72.86, and area 5734.082.

The two properties are being compared.

DATA1 equals DATA2: true
The two properties have the same dimensions.



// Run 2:

Property RWA1 with length 78.7, width 72.86, and area 5734.082.

Property RYT0 with length 59.8, width 53.93, and area 3225.0139999999997.

The two properties are being compared.

DATA1 equals DATA2: false

The two properties do not have the same dimensions.



// Run 3:

Property RWA1 with length 78.7, width 72.86, and area 5734.082.

Property RYT0 with length 78.7, width 72.86, and area 5734.082.

The two properties are being compared.

DATA1 equals DATA2: false

The two properties have the same dimensions.



// Run 4:

Property RWA1 with length 78.7, width 72.86, and area 5734.082.

Property RWA1 with length 59.8, width 53.93, and area 3225.0139999999997.

The two properties are being compared.

DATA1 equals DATA2: false

The two properties do not have the same dimensions.







